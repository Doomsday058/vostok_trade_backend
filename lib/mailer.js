// server/lib/mailer.js
// server/lib/mailer.js
import nodemailer from 'nodemailer';
import path from 'path';
import fs from 'fs';
import { fileURLToPath } from 'url';

const __dirname = path.dirname(fileURLToPath(import.meta.url));

// –ü—É—Ç—å –∫ –≥–æ—Ç–æ–≤–æ–º—É —Ñ–∞–π–ª—É –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–∞
const PRICE_LIST_PATH = path.join(__dirname, '..', 'price.xlsx');

// –°–æ–∑–¥–∞–µ–º –∏ —Ç–µ—Å—Ç–∏—Ä—É–µ–º —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–∏—Å–µ–º
let transporter;

const initMailer = async () => {
  console.log('–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ—á—Ç–æ–≤–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞...');
  
  try {
    // –ü—Ä–æ–≤–µ—Ä–∫–∞, –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    if (!process.env.SMTP_HOST || !process.env.SMTP_USER || !process.env.SMTP_PASS) {
      console.error('‚ùå –û—à–∏–±–∫–∞: –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –ø–∞—Ä–∞–º–µ—Ç—Ä—ã SMTP –≤ .env —Ñ–∞–π–ª–µ');
      console.log('–¢—Ä–µ–±—É—é—Ç—Å—è –ø–∞—Ä–∞–º–µ—Ç—Ä—ã: SMTP_HOST, SMTP_PORT, SMTP_USER, SMTP_PASS');
      return;
    }
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ .env
    transporter = nodemailer.createTransport({
      host: process.env.SMTP_HOST,
      port: Number(process.env.SMTP_PORT || 587),
      secure: process.env.SMTP_PORT === '465',
      auth: {
        user: process.env.SMTP_USER,
        pass: process.env.SMTP_PASS
      }
    });
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
    await transporter.verify();
    console.log('‚úÖ –ü–æ—á—Ç–æ–≤—ã–π —Å–µ—Ä–≤–∏—Å —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–∞ –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–∞
    if (fs.existsSync(PRICE_LIST_PATH)) {
      console.log('‚úÖ –§–∞–π–ª –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–∞ –Ω–∞–π–¥–µ–Ω:', PRICE_LIST_PATH);
    } else {
      console.warn('‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ: –§–∞–π–ª –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ –ø—É—Ç–∏:', PRICE_LIST_PATH);
      console.log('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–º–µ—Å—Ç–∏—Ç–µ —Ñ–∞–π–ª price.xlsx –≤ –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É —Å–µ—Ä–≤–µ—Ä–∞.');
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø–æ—á—Ç–æ–≤–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞:', error);
    
    // –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—ã–π —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º ethereal.email –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    console.log('üîÑ –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞...');
    try {
      const testAccount = await nodemailer.createTestAccount();
      transporter = nodemailer.createTransport({
        host: 'smtp.ethereal.email',
        port: 587,
        secure: false,
        auth: {
          user: testAccount.user,
          pass: testAccount.pass
        }
      });
      console.log('‚úÖ –†–µ–∑–µ—Ä–≤–Ω—ã–π –ø–æ—á—Ç–æ–≤—ã–π —Å–µ—Ä–≤–∏—Å —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
      console.log(`üìß Email: ${testAccount.user}`);
      console.log(`üìß Password: ${testAccount.pass}`);
      console.log(`üìß –ü—Ä–æ—Å–º–æ—Ç—Ä –ø–∏—Å–µ–º: https://ethereal.email/`);
    } catch (fallbackError) {
      console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –¥–∞–∂–µ —Ä–µ–∑–µ—Ä–≤–Ω—ã–π –ø–æ—á—Ç–æ–≤—ã–π —Å–µ—Ä–≤–∏—Å:', fallbackError);
    }
  }
};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–æ—á—Ç–æ–≤—ã–π —Å–µ—Ä–≤–∏—Å –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ –º–æ–¥—É–ª—è
initMailer();

/**
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–∏—Å—å–º–æ —Å –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–æ–º –≤ –≤–∏–¥–µ Excel-—Ñ–∞–π–ª–∞
 * @param {string} toEmail - Email –ø–æ–ª—É—á–∞—Ç–µ–ª—è
 * @param {Array} products - –ú–∞—Å—Å–∏–≤ —Ç–æ–≤–∞—Ä–æ–≤ (–Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è, —Ç.–∫. –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≥–æ—Ç–æ–≤—ã–π —Ñ–∞–π–ª)
 * @returns {Promise<boolean>} - –£—Å–ø–µ—à–Ω–æ—Å—Ç—å –æ—Ç–ø—Ä–∞–≤–∫–∏
 */
export async function sendPriceByEmail(toEmail, products) {
  try {
    if (!transporter) {
      // –ï—Å–ª–∏ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç –µ—â–µ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω, –ø—Ä–æ–±—É–µ–º –µ—â–µ —Ä–∞–∑
      await initMailer();
      if (!transporter) {
        throw new Error('–ü–æ—á—Ç–æ–≤—ã–π —Å–µ—Ä–≤–∏—Å –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
      }
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–∞ –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–∞
    if (!fs.existsSync(PRICE_LIST_PATH)) {
      console.error('‚ùå –û—à–∏–±–∫–∞: –§–∞–π–ª –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ –ø—É—Ç–∏:', PRICE_LIST_PATH);
      throw new Error('–§–∞–π–ª –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–º–µ—Å—Ç–∏—Ç–µ —Ñ–∞–π–ª price.xlsx –≤ –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É —Å–µ—Ä–≤–µ—Ä–∞.');
    }
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º HTML –¥–ª—è –ø–∏—Å—å–º–∞ —Å –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–º —Å—Ç–∏–ª–µ–º
    const htmlContent = `
      <!DOCTYPE html>
      <html>
      <head>
        <meta charset="utf-8">
        <style>
          body {
            font-family: Arial, sans-serif;
            line-height: 1.6;
            color: #333;
          }
          .container {
            max-width: 600px;
            margin: 0 auto;
            padding: 20px;
          }
          .header {
            background-color: #1f2937;
            color: white;
            padding: 20px;
            text-align: center;
          }
          .content {
            padding: 20px;
            background-color: #f9f9f9;
          }
          .footer {
            text-align: center;
            margin-top: 20px;
            font-size: 12px;
            color: #666;
          }
        </style>
      </head>
      <body>
        <div class="container">
          <div class="header">
            <h1>VOSTOK TRADE COMPANY</h1>
          </div>
          <div class="content">
            <h2>–ü—Ä–∞–π—Å-–ª–∏—Å—Ç –Ω–∞ –ø—Ä–æ–¥—É–∫—Ü–∏—é</h2>
            <p>–£–≤–∞–∂–∞–µ–º—ã–π –∫–ª–∏–µ–Ω—Ç!</p>
            <p>–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –≤–∞—Å –∑–∞ –∏–Ω—Ç–µ—Ä–µ—Å –∫ –Ω–∞—à–µ–π –ø—Ä–æ–¥—É–∫—Ü–∏–∏. –í –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–Ω–æ–º —Ñ–∞–π–ª–µ –≤—ã –Ω–∞–π–¥–µ—Ç–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã–π –ø—Ä–∞–π—Å-–ª–∏—Å—Ç.</p>
            <p>–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –≤–æ–ø—Ä–æ—Å—ã, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –ø–æ –∫–æ–Ω—Ç–∞–∫—Ç–∞–º, —É–∫–∞–∑–∞–Ω–Ω—ã–º –Ω–∞ –Ω–∞—à–µ–º —Å–∞–π—Ç–µ.</p>
            <p>–° —É–≤–∞–∂–µ–Ω–∏–µ–º,<br>–ö–æ–º–∞–Ω–¥–∞ VOSTOK TRADE COMPANY</p>
          </div>
          <div class="footer">
            <p>¬© ${new Date().getFullYear()} VOSTOK TRADE COMPANY. –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã.</p>
          </div>
        </div>
      </body>
      </html>
    `;
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–∏—Å—å–º–∞
    const mailOptions = {
      from: `"VOSTOK TRADE COMPANY" <${process.env.SMTP_USER}>`,
      to: toEmail,
      subject: '–ü—Ä–∞–π—Å-–ª–∏—Å—Ç VOSTOK TRADE COMPANY',
      html: htmlContent,
      attachments: [
        {
          filename: 'price-list.xlsx',
          path: PRICE_LIST_PATH
        }
      ]
    };
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–∏—Å—å–º–æ
    const info = await transporter.sendMail(mailOptions);
    console.log('‚úÖ –ü–∏—Å—å–º–æ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ:', info.messageId);
    
    // –î–ª—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞ ethereal –ø–æ–∫–∞–∑—ã–≤–∞–µ–º URL –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø–∏—Å—å–º–∞
    if (info.messageId && info.messageUrl) {
      console.log('üìß URL –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø–∏—Å—å–º–∞:', info.messageUrl);
    }
    
    return true;
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–∏—Å—å–º–∞:', error);
    throw error;
  }
}